definitions:
  app.ResponseModel:
    properties:
      data:
        type: object
      msg:
        description: Code int         `json:"code"`
        type: string
    type: object
  contsauser.AddUserForm:
    properties:
      company_id:
        type: integer
      created_by:
        type: string
      email_addr:
        type: string
      group_id:
        type: integer
      handphone_no:
        type: string
      level_no:
        type: integer
      passwd:
        type: string
      picture_url:
        type: string
      project_id:
        type: integer
      user_name:
        type: string
      user_status:
        type: integer
    type: object
  contsauser.EditUserForm:
    properties:
      Updated_by:
        type: string
      company_id:
        type: integer
      email_addr:
        type: string
      group_id:
        type: integer
      handphone_no:
        type: string
      level_no:
        type: integer
      passwd:
        type: string
      picture_url:
        type: string
      project_id:
        type: integer
      user_name:
        type: string
      user_status:
        type: integer
    type: object
  models.ResponseModelList:
    properties:
      data:
        type: object
      last_page:
        type: integer
      msg:
        type: string
      page:
        type: integer
      total:
        type: integer
    type: object
info:
  contact:
    email: nuryantofattih@gmail.com
    name: Nuryanto
    url: https://www.linkedin.com/in/nuryanto-1b2721156/
  description: Backend REST API for golang starter
  license: {}
  title: Starter
  version: "1.0"
paths:
  /api/user:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.ResponseModel'
      summary: GetList SaUser
      tags:
      - User
    get:
      parameters:
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      - description: PerPage
        in: query
        name: perpage
        required: true
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      - description: InitSearch
        in: query
        name: initsearch
        type: string
      - description: SortField
        in: query
        name: sortfield
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseModelList'
      summary: GetList SaUser
      tags:
      - User
    post:
      parameters:
      - description: 'req param #changes are possible to adjust the form of the registration
          form from forntend'
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/contsauser.AddUserForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.ResponseModel'
      summary: Add User
      tags:
      - User
  /api/user/{id}:
    get:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.ResponseModel'
      summary: GetById SaUser
      tags:
      - User
    put:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'req param #changes are possible to adjust the form of the registration
          form from forntend'
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/contsauser.EditUserForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.ResponseModel'
      summary: Update User
      tags:
      - User
swagger: "2.0"
